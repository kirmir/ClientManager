@model ClientManagerWeb.ViewModels.Templates.TemplateCreateEditViewModel

<div class="editor-label">
    @Html.LabelFor(model => model.Name)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Name)
    @Html.ValidationMessageFor(model => model.Name)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Description)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.Description, new { style = "width: 600px;" })
    @Html.ValidationMessageFor(model => model.Description)
</div>

<br />
<fieldset>
    <legend>Letter</legend>

    <div class="editor-label">
        @Html.LabelFor(model => model.LetterSubject)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.LetterSubject, new { style = "width: 700px;" })
        @Html.ValidationMessageFor(model => model.LetterSubject)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.LetterContent)
    </div>
    <div class="editor-field">
        @Html.TextAreaFor(model => model.LetterContent, new { style = "height: 200px; width: 700px;" })
        @Html.ValidationMessageFor(model => model.LetterContent)
    </div>
    Insert:
    <a href="javaScript:insertAtCaret('LetterContent', '{first-name}')">First name</a>
    <a href="javaScript:insertAtCaret('LetterContent', '{second-name}')">Second name</a>
</fieldset>

<div class="editor-label">
    @Html.LabelFor(model => model.DaysCount)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.DaysCount, new { style = "min-width: 0; width: 100px;" })
    @Html.ValidationMessageFor(model => model.DaysCount)
</div>

<br />

<fieldset>
    <legend>Tags</legend>

    <br />
    Select existing tags
    <div class="scroll-box-tags">
        @foreach (var tag in ViewBag.Tags)
        {
            <div>
                @{ var optionId = "TagOption_" + tag.Id; }
                <input type="checkbox" id="@optionId" name="SelectedTags" value="@tag.Id"
                        @((Model != null && Model.SelectedTags != null &&
                            Array.IndexOf(Model.SelectedTags, tag.Id) != -1) ? "checked=\"checked\"" : null) />
                <label for="@optionId">@tag.Value</label>
            </div>
        }
    </div>
    <a href="javaScript:selectAll(true)">Select all</a>
    <a href="javaScript:selectAll(false)">Deselect all</a>
    <br /><br />

    <script type="text/javascript">
        function selectAll(check) {
            $("input[id^=TagOption]").attr('checked', check);
        }
    </script>

    or write new tags separated by comma ("tag1, tag2, tag3, ...")
    <div class="editor-field">
        @Html.TextBoxFor(model => model.NewTags, new { style = "width: 600px;" })
        @Html.ValidationMessageFor(model => model.NewTags)
    </div>
</fieldset>

<script type="text/javascript">
    function insertAtCaret(element, value) {
        var element_dom = document.getElementsByName(element)[0];
        if (document.selection) {
            element_dom.focus();
            sel = document.selection.createRange();
            sel.text = value;
            return;
        }
        if (element_dom.selectionStart || element_dom.selectionStart == "0") {
            var t_start = element_dom.selectionStart;
            var t_end = element_dom.selectionEnd;
            var val_start = element_dom.value.substring(0, t_start);
            var val_end = element_dom.value.substring(t_end, element_dom.value.length);
            element_dom.value = val_start + value + val_end;
        } else {
            element_dom.value += value;
        }
    }
</script>